// Code generated by protoc-gen-go.
// source: loginlogin.proto
// DO NOT EDIT!

package userproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserLoginLoginState int32

const (
	UserLoginLoginState_kDatabaseError     UserLoginLoginState = 0
	UserLoginLoginState_kNamePasswdError   UserLoginLoginState = 1
	UserLoginLoginState_kLoginLoginSuccess UserLoginLoginState = 2
)

var UserLoginLoginState_name = map[int32]string{
	0: "kDatabaseError",
	1: "kNamePasswdError",
	2: "kLoginLoginSuccess",
}
var UserLoginLoginState_value = map[string]int32{
	"kDatabaseError":     0,
	"kNamePasswdError":   1,
	"kLoginLoginSuccess": 2,
}

func (x UserLoginLoginState) Enum() *UserLoginLoginState {
	p := new(UserLoginLoginState)
	*p = x
	return p
}
func (x UserLoginLoginState) String() string {
	return proto.EnumName(UserLoginLoginState_name, int32(x))
}
func (x *UserLoginLoginState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserLoginLoginState_value, data, "UserLoginLoginState")
	if err != nil {
		return err
	}
	*x = UserLoginLoginState(value)
	return nil
}
func (UserLoginLoginState) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// user->login
type UserLoginLoginRequest struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Passwd           *string `protobuf:"bytes,2,req,name=passwd" json:"passwd,omitempty"`
	Zone             *int32  `protobuf:"varint,3,req,name=zone" json:"zone,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserLoginLoginRequest) Reset()                    { *m = UserLoginLoginRequest{} }
func (m *UserLoginLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*UserLoginLoginRequest) ProtoMessage()               {}
func (*UserLoginLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *UserLoginLoginRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *UserLoginLoginRequest) GetPasswd() string {
	if m != nil && m.Passwd != nil {
		return *m.Passwd
	}
	return ""
}

func (m *UserLoginLoginRequest) GetZone() int32 {
	if m != nil && m.Zone != nil {
		return *m.Zone
	}
	return 0
}

// login->user
type UserLoginLoginResponse struct {
	State             *UserLoginLoginState `protobuf:"varint,1,req,name=state,enum=userproto.UserLoginLoginState" json:"state,omitempty"`
	RandomKey         []byte               `protobuf:"bytes,2,req,name=randomKey" json:"randomKey,omitempty"`
	GateListenAddress *string              `protobuf:"bytes,3,req,name=gateListenAddress" json:"gateListenAddress,omitempty"`
	XXX_unrecognized  []byte               `json:"-"`
}

func (m *UserLoginLoginResponse) Reset()                    { *m = UserLoginLoginResponse{} }
func (m *UserLoginLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*UserLoginLoginResponse) ProtoMessage()               {}
func (*UserLoginLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *UserLoginLoginResponse) GetState() UserLoginLoginState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return UserLoginLoginState_kDatabaseError
}

func (m *UserLoginLoginResponse) GetRandomKey() []byte {
	if m != nil {
		return m.RandomKey
	}
	return nil
}

func (m *UserLoginLoginResponse) GetGateListenAddress() string {
	if m != nil && m.GateListenAddress != nil {
		return *m.GateListenAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*UserLoginLoginRequest)(nil), "userproto.UserLoginLoginRequest")
	proto.RegisterType((*UserLoginLoginResponse)(nil), "userproto.UserLoginLoginResponse")
	proto.RegisterEnum("userproto.UserLoginLoginState", UserLoginLoginState_name, UserLoginLoginState_value)
}

var fileDescriptor1 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xdd, 0xea, 0x0a, 0x19, 0x97, 0x92, 0x1d, 0x75, 0xa9, 0x17, 0x91, 0x3d, 0x89, 0x60,
	0x0f, 0x7e, 0x03, 0xff, 0x9d, 0x5c, 0x44, 0x14, 0x11, 0xbc, 0xc5, 0x66, 0x28, 0xa5, 0x36, 0xa9,
	0x99, 0x04, 0xd1, 0x4f, 0x6f, 0x9a, 0x82, 0xff, 0xd8, 0xcb, 0x90, 0x97, 0x97, 0xf9, 0x3d, 0x5e,
	0x40, 0xbe, 0xda, 0xba, 0x31, 0x69, 0x94, 0xbd, 0xb3, 0xde, 0xa2, 0x08, 0x4c, 0x2e, 0x1d, 0x97,
	0x97, 0xb0, 0xff, 0x18, 0xc5, 0x6a, 0x70, 0xd3, 0xb8, 0xa7, 0xb7, 0x40, 0xec, 0x71, 0x06, 0x5b,
	0x46, 0x75, 0x54, 0x4c, 0x8e, 0xb2, 0x63, 0x81, 0x39, 0x6c, 0xf7, 0x8a, 0xf9, 0x5d, 0x17, 0x59,
	0xd2, 0xd1, 0xfd, 0xb4, 0x86, 0x8a, 0xcd, 0xa8, 0xa6, 0xcb, 0x00, 0x8b, 0xff, 0x10, 0xee, 0xad,
	0x61, 0xc2, 0x53, 0x98, 0xb2, 0x57, 0x7e, 0xc4, 0xe4, 0x67, 0x87, 0xe5, 0x77, 0x72, 0xf9, 0x77,
	0xe3, 0x61, 0x78, 0x85, 0x73, 0x10, 0x4e, 0x19, 0x6d, 0xbb, 0x1b, 0xfa, 0x48, 0x49, 0x33, 0x3c,
	0x80, 0x79, 0x1d, 0xad, 0x55, 0xc3, 0x9e, 0xcc, 0xb9, 0xd6, 0x8e, 0x98, 0x53, 0xac, 0x38, 0x79,
	0x82, 0xdd, 0x75, 0x10, 0x84, 0xbc, 0xbd, 0x52, 0x5e, 0xbd, 0x28, 0xa6, 0x6b, 0xe7, 0xac, 0x93,
	0x1b, 0xb8, 0x07, 0xb2, 0xbd, 0x8d, 0x75, 0xee, 0x52, 0x89, 0xf1, 0x76, 0x82, 0x0b, 0xc0, 0xf6,
	0xd7, 0x76, 0xa8, 0xaa, 0x08, 0x97, 0xd9, 0xc5, 0xce, 0xf3, 0xcf, 0x0f, 0x7d, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x54, 0x9d, 0x4e, 0x23, 0x3f, 0x01, 0x00, 0x00,
}
